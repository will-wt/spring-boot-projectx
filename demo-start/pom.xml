<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.will</groupId>
        <artifactId>demo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>demo-start</artifactId>
    <packaging>jar</packaging>

<!--    <properties>-->
<!--        <maven.compiler.source>8</maven.compiler.source>-->
<!--        <maven.compiler.target>8</maven.compiler.target>-->
<!--    </properties>-->

    <dependencies>
        <dependency>
            <groupId>com.will</groupId>
            <artifactId>demo-biz</artifactId>
        </dependency>

        <!-- AOP-aspectj-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!-- 指定打包时的文件名 -->
        <finalName>spring-boot-projectx</finalName>

        <!-- 资源文件打包配置。build过程中涉及的资源文件，用于包含 或 排除某些资源文件 -->
        <resources>
            <resource>
                <!-- 资源文件的路径，默认位于${basedir}/src/main/resources/目录下 -->
                <directory>src/main/resources</directory>
                <!-- 设为true，才能替换资源文件中的占位符 -->
                <filtering>true</filtering>
                <!-- 一组文件名的匹配模式，被匹配的资源文件将被构建过程忽略（excludes）或者包含（includes）。
                     同时被includes和excludes匹配的资源文件，将被忽略。 -->
                <includes>
                    <include>application.properties</include>
                    <include>application-${spring.profiles.active}.properties</include>
                </includes>
            </resource>
            <resource>
                <!-- 打包其它资源文件 -->
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <!--  <include>**/*.properties</include> -->
                    <include>**/*.xml</include>
                    <include>**/*.html</include>
                    <include>**/*.js</include>
                    <include>**/*.css</include>
                    <include>**/*.png</include>
                    <include>**/*.ico</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!--                    <archive>-->
                    <!--                        &lt;!&ndash; 打出的jar包中的 MANIFEST.MF 文件中增加 Main-Class 这一项配置，-->
                    <!--                           这样就能在命令行中通过 java -jar 来执行打出的jar包 &ndash;&gt;-->
                    <!--                        <manifestEntries>-->
                    <!--                            <Main-Class>DemoApplication</Main-Class>-->
                    <!--                        </manifestEntries>-->
                    <!--                    </archive>-->
                    <archive>
                        <manifest>
                            <mainClass>com.will.demo.start.Application</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- SpringBoot 打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 把lib目录中手动加入的jar打包进来 -->
                    <includeSystemScope>true</includeSystemScope>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>